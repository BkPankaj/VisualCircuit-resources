{
  "version": "1.0",
  "package": {
    "name": "Cropper",
    "version": "1.0.0",
    "description": "Crops an Image",
    "author": "Muhammad Taha Suhail",
    "image": "%3Csvg%20height=%22512%22%20viewBox=%220%200%20510.742%20510.742%22%20width=%22512%22%20xmlns=%22http://www.w3.org/2000/svg%22%3E%3Cpath%20d=%22M361.101%20301.024v189.453c0%207.042%205.708%2012.751%2012.75%2012.751h49.499c7.042%200%2012.75-5.709%2012.75-12.751V301.024z%22%20fill=%22#6cf5c2%22/%3E%3Cpath%20d=%22M142.878%2037.863V20.266c0-7.042-5.709-12.751-12.751-12.751H80.629c-7.042%200-12.751%205.709-12.751%2012.751v378.32c0%2020.711%2016.789%2037.5%2037.5%2037.5h385.114c7.042%200%2012.751-5.709%2012.751-12.751v-49.499c0-7.042-5.709-12.751-12.751-12.751H142.878z%22%20fill=%22#c2fae3%22/%3E%3Cpath%20d=%22M398.601%2067.863H20.281c-7.042%200-12.75%205.709-12.75%2012.75v49.499c0%207.042%205.708%2012.751%2012.75%2012.751H361.101v158.161l11.803%2017.889h57.065l6.132-17.889V105.363c0-20.711-16.789-37.5-37.5-37.5z%22%20fill=%22#6cf5c2%22/%3E%3Cpath%20d=%22M67.878%2045.363a7.5%207.5%200%200%200%207.5-7.5V20.266a5.256%205.256%200%200%201%205.251-5.25h49.498a5.256%205.256%200%200%201%205.251%205.25v17.597c0%204.142%203.357%207.5%207.5%207.5s7.5-3.358%207.5-7.5V20.266c0-11.166-9.085-20.25-20.251-20.25H80.629c-11.166%200-20.251%209.084-20.251%2020.25v17.597a7.5%207.5%200%200%200%207.5%207.5zM490.492%20353.586H163.749l6.544-6.544a7.5%207.5%200%200%200-10.607-10.606l-9.308%209.307v-172.88c0-4.142-3.357-7.5-7.5-7.5s-7.5%203.358-7.5%207.5v187.88l-10.646%2010.645a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l13.408-13.408h341.744a5.256%205.256%200%200%201%205.25%205.25v49.499a5.256%205.256%200%200%201-5.25%205.25H105.378c-4.83%200-9.393-1.154-13.438-3.19l8.448-8.448a7.5%207.5%200%200%200-10.607-10.606l-9.162%209.161a29.828%2029.828%200%200%201-5.241-16.916v-144.86c0-4.142-3.357-7.5-7.5-7.5s-7.5%203.358-7.5%207.5v144.86c0%2010.412%203.564%2020.001%209.523%2027.634l-15.074%2015.074a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l15.537-15.537a44.718%2044.718%200%200%200%2024.406%207.223h385.114c11.166%200%2020.25-9.084%2020.25-20.25v-49.499c0-11.166-9.084-20.251-20.25-20.251zM60.378%20172.863v48.9c0%204.142%203.357%207.5%207.5%207.5s7.5-3.358%207.5-7.5v-48.9c0-4.142-3.357-7.5-7.5-7.5s-7.5%203.358-7.5%207.5z%22/%3E%3Cpath%20d=%22M20.281%20150.363h325.476l-11.308%2011.308a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l8.545-8.545v82.186c0%204.142%203.357%207.5%207.5%207.5s7.5-3.358%207.5-7.5v-97.186l11.408-11.408a7.5%207.5%200%200%200-10.607-10.606l-8.645%208.645H20.281a5.256%205.256%200%200%201-5.251-5.25v-49.5a5.256%205.256%200%200%201%205.251-5.25h378.32a29.828%2029.828%200%200%201%2016.916%205.24l-11.162%2011.162a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l10.448-10.448a29.8%2029.8%200%200%201%203.191%2013.439v225.723c0%204.142%203.357%207.5%207.5%207.5s7.5-3.358%207.5-7.5V105.363c0-8.992-2.662-17.37-7.224-24.407l13.537-13.537a7.498%207.498%200%200%200-.001-10.606%207.498%207.498%200%200%200-10.606%200l-13.073%2013.073c-7.633-5.959-17.222-9.522-27.633-9.522H20.281C9.115%2060.364.03%2069.448.03%2080.614v49.499c.001%2011.165%209.085%2020.25%2020.251%2020.25z%22/%3E%3Cpath%20d=%22M361.102%20270.38a7.5%207.5%200%200%200-7.5%207.5v53.206c0%204.142%203.357%207.5%207.5%207.5s7.5-3.358%207.5-7.5V277.88a7.5%207.5%200%200%200-7.5-7.5zM436.102%20458.586a7.5%207.5%200%200%200-7.5%207.5v24.391a5.256%205.256%200%200%201-5.251%205.25h-49.499a5.256%205.256%200%200%201-5.25-5.25v-24.391c0-4.142-3.357-7.5-7.5-7.5s-7.5%203.358-7.5%207.5v24.391c0%2011.166%209.084%2020.25%2020.25%2020.25h49.499c11.166%200%2020.251-9.084%2020.251-20.25v-24.391a7.5%207.5%200%200%200-7.5-7.5zM19.874%20476.246L2.197%20493.924a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l17.678-17.678a7.5%207.5%200%200%200%200-10.606%207.505%207.505%200%200%200-10.609%200zM299.497%20196.624l-34.953%2034.953a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l34.953-34.953c2.929-2.929%202.929-7.678%200-10.606s-7.677-2.93-10.608%200zM229.591%20266.529l-34.952%2034.953a7.5%207.5%200%200%200%205.304%2012.803%207.478%207.478%200%200%200%205.304-2.197l34.952-34.953a7.5%207.5%200%200%200%200-10.606%207.502%207.502%200%200%200-10.608%200zM479.565%2034.663a7.478%207.478%200%200%200%205.304-2.197l17.678-17.678A7.5%207.5%200%200%200%20491.94%204.182L474.262%2021.86a7.5%207.5%200%200%200%205.303%2012.803z%22/%3E%3C/svg%3E"
  },
  "design": {
    "board": "Python3-Noetic",
    "graph": {
      "blocks": [

        {
          "id": "Inp-0",
          "type": "basic.input",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },

        {
          "id": "Inp-1",
          "type": "basic.input",
          "data": {
            "name": "E",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },


        {
          "id": "Out-0",
          "type": "basic.output",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 752,
            "y": 144
          }
        },
        
       {
          "id": "300",
          "type": "basic.code",
          "data": {
            "code": "import cv2 as cv\nimport numpy as np\nfrom time import sleep\nfrom utils.wires.wire_img import share_image, read_image\nfrom utils.wires.wire_str import read_string\nfrom utils.tools.freq_monitor import monitor_frequency\n\ndef loop(block_name, input_wires, output_wires, parameters, flags):\n\n    input_0 = read_image(input_wires[0])\n    output_0 = share_image(output_wires[0])\n    \n    # Bounding Box Co-ordinates (OpenCV Standard Rectangle (x, y, w, h))\n    x, y, w, h = np.array([int(x.strip()) for x in parameters[1].split(',')])\n\n    enabled = False\n    try:\n        enable_wire = read_string(input_wires[1])\n    except IndexError:\n        enabled = True\n    \n    required_frequency, update = float(parameters[0]), 1\n    control_data = np.array([0.0,0.03])\n    \n    if flags[0] == 1:\n        monitor_frequency(block_name, control_data, required_frequency, update)\n        \n    try:\n        while True:\n        \n            if enabled or (update := bool(enable_wire.get()[0])):\n    \n                frame = input_0.get()\n                \n                if frame is not None:\n\n                    crop_img = frame[y:y+h, x:x+w, :]\n                    output_0.add(crop_img)\n    \n                control_data[0] += 1\n                \n            sleep(control_data[1])\n            \n    except KeyboardInterrupt: \n    \n        input_0.release()\n        enable_wire.release()\n        output_0.release()",
            "params": [],
            "ports": {
              "in": [
                {
                  "name": "Inp-0"
                }
              ],
              "out": [
                {
                  "name": "Out-0"
                }
              ]
            }
          },
          "position": {
            "x": 50,
            "y": 100
          },
          "size": {
            "width": 800,
            "height": 600
          }
        },
        
        {
          "id": "400",
          "type": "basic.constant",
          "data": {
            "name": "Frequency", 
            "value": "30.0",
            "local": true
          },
          "position": {
            "x": 300,
            "y": 10
          }
        },          
        
        {
          "id": "401",
          "type": "basic.constant",
          "data": {
            "name": "x,y,w,h", 
            "value": "100,100,20,20",
            "local": true
          },
          "position": {
            "x": 400,
            "y": 10
          }
        }      
        
      ],

      "wires": [
        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        },

        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        }
      ]
    }
  },
  "dependencies": {}
}
