{
  "version": "1.0",
  "package": {
    "name": "Erosion",
    "version": "1.0.0",
    "description": "Performs Erosion on an Image",
    "author": "Muhammad Taha Suhail",
    "image": "%3Csvg%20height=%22512%22%20viewBox=%220%200%20512%20512%22%20width=%22512%22%20xmlns=%22http://www.w3.org/2000/svg%22%3E%3Cg%20fill=%22#57a4ff%22%3E%3Cpath%20d=%22M199.85%20120.85h32v112h-112v-32h57.38L66%2089.62%2088.62%2067l111.23%20111.23zM119.85%20280h112v112h-32v-57.38L88.62%20445.85%2066%20423.23%20177.23%20312h-57.38zM334.62%20311l111.23%20111.23-22.62%2022.62L312%20333.62V391h-32V279h112v32zM392%20231.85H280v-112h32v57.38L423.23%2066l22.62%2022.62-111.23%20111.23H392z%22/%3E%3Cpath%20d=%22M231.85%20120.85v112h-112v-32h57.38L66%2089.62%2088.62%2067l111.23%20111.23v-57.38zM334.62%20199.85H392v32H280v-112h32v57.38L423.23%2066l22.62%2022.62zM445.85%20422.23l-22.62%2022.62L312%20333.62V391h-32V279h112v32h-57.38zM231.85%20280v112h-32v-57.38L88.62%20445.85%2066%20423.23%20177.23%20312h-57.38v-32z%22/%3E%3C/g%3E%3Cg%20fill=%22#004fac%22%3E%3Cpath%20d=%22M476%208H36A28.032%2028.032%200%200%200%208%2036v440a28.032%2028.032%200%200%200%2028%2028h440a28.032%2028.032%200%200%200%2028-28V36a28.032%2028.032%200%200%200-28-28zm12%20468a12.013%2012.013%200%200%201-12%2012H36a12.013%2012.013%200%200%201-12-12V36a12.013%2012.013%200%200%201%2012-12h440a12.013%2012.013%200%200%201%2012%2012z%22/%3E%3Cpath%20d=%22M231.85%20112.85h-32a8%208%200%200%200-8%208v38.067L94.277%2061.343a8%208%200%200%200-11.314%200l-22.62%2022.62a8%208%200%200%200%200%2011.314l97.573%2097.573H119.85a8%208%200%200%200-8%208v32a8%208%200%200%200%208%208h112a8%208%200%200%200%208-8v-112a8%208%200%200%200-8-8zm-8%20112h-96v-16h49.38a8%208%200%200%200%205.657-13.658L77.313%2089.62%2088.62%2078.313l105.573%20105.575a8%208%200%200%200%2013.657-5.658v-49.38h16zM280%20239.85h112a8%208%200%200%200%208-8v-32a8%208%200%200%200-8-8h-38.066l97.573-97.573a8%208%200%200%200%200-11.314l-22.62-22.62a8%208%200%200%200-11.314%200L320%20157.917V119.85a8%208%200%200%200-8-8h-32a8%208%200%200%200-8%208v112a8%208%200%200%200%208%208zm8-112h16v49.38a8%208%200%200%200%2013.657%205.658L423.23%2077.313l11.307%2011.307-105.574%20105.572a8%208%200%200%200%205.657%2013.658H384v16h-96zM353.934%20319H392a8%208%200%200%200%208-8v-32a8%208%200%200%200-8-8H280a8%208%200%200%200-8%208v112a8%208%200%200%200%208%208h32a8%208%200%200%200%208-8v-38.066l97.573%2097.574a8%208%200%200%200%2011.314%200l22.62-22.62a8%208%200%200%200%200-11.315zm69.3%20114.537L317.657%20327.963A8%208%200%200%200%20304%20333.62V383h-16v-96h96v16h-49.38a8%208%200%200%200-5.657%2013.657L434.537%20422.23zM231.85%20272h-112a8%208%200%200%200-8%208v32a8%208%200%200%200%208%208h38.067l-97.574%2097.573a8%208%200%200%200%200%2011.315l22.62%2022.619a8%208%200%200%200%2011.314%200l97.573-97.573V392a8%208%200%200%200%208%208h32a8%208%200%200%200%208-8V280a8%208%200%200%200-8-8zm-8%20112h-16v-49.38a8%208%200%200%200-13.657-5.657L88.62%20434.536%2077.314%20423.23l105.573-105.573A8%208%200%200%200%20177.23%20304h-49.38v-16h96z%22/%3E%3C/g%3E%3C/svg%3E"
  },
  "design": {
    "board": "Python3-Noetic",
    "graph": {
      "blocks": [

        {
          "id": "Inp-0",
          "type": "basic.input",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },

        {
          "id": "Inp-1",
          "type": "basic.input",
          "data": {
            "name": "E",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },

        {
          "id": "Out-0",
          "type": "basic.output",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 752,
            "y": 144
          }
        },

       {
          "id": "300",
          "type": "basic.code",
          "data": {
            "code": "import cv2 as cv\nimport numpy as np\nfrom time import sleep\nfrom utils.wires.wire_img import share_image, read_image\nfrom utils.wires.wire_str import read_string\nfrom utils.tools.freq_monitor import monitor_frequency\n\ndef loop(block_name, input_wires, output_wires, parameters, flags):\n\n    input_0 = read_image(input_wires[0])\n    output_0 = share_image(output_wires[0])\n\n    # Parameters\n    kernel = tuple([int(x.strip()) for x in parameters[1].split(',')])\n    kernel = np.ones(kernel, np.uint8)\n    iters = int(parameters[2])\n\n    enabled = False\n    try:\n        enable_wire = read_string(input_wires[1])\n    except IndexError:\n        enabled = True\n    \n    required_frequency, update = float(parameters[0]), 1\n    control_data = np.array([0.0,0.03])\n    \n    if flags[0] == 1:\n        monitor_frequency(block_name, control_data, required_frequency, update)\n        \n    try:\n    \n        while True:\n        \n            if enabled or (update := bool(enable_wire.get()[0])):\n\n                frame = input_0.get()\n                \n                if frame is not None:\n\n                    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n                    eroded = cv2.erode(frame, kernel, iterations = iters)\n                    eroded = cv2.cvtColor(eroded, cv2.COLOR_GRAY2BGR)\n                    output_0.add(eroded)\n\n                    control_data[0] += 1\n                        \n            sleep(control_data[1])\n            \n    except KeyboardInterrupt: \n    \n        input_0.release()\n        enable_wire.release()\n        output_0.release()",
            "params": [],
            "ports": {
              "in": [
                {
                  "name": "Inp-0"
                }
              ],
              "out": [
                {
                  "name": "Out-0"
                }
              ]
            }
          },
          "position": {
            "x": 50,
            "y": 100
          },
          "size": {
            "width": 800,
            "height": 600
          }
        },
        
        {
          "id": "400",
          "type": "basic.constant",
          "data": {
            "name": "Frequency", 
            "value": "30.0",
            "local": true
          },
          "position": {
            "x": 300,
            "y": 10
          }
        },    
        
        {
          "id": "401",
          "type": "basic.constant",
          "data": {
            "name": "Kernel",
            "value": "5,5",
            "local": true
          },
          "position": {
            "x": 400,
            "y": 10
          }
        },
        {
          "id": "402",
          "type": "basic.constant",
          "data": {
            "name": "Iterations",
            "value": "1",
            "local": true
          },
          "position": {
            "x": 500,
            "y": 10
          }
        }
        
      ],

      "wires": [
        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        },

        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        }
      ]
    }
  },
  "dependencies": {}
}
