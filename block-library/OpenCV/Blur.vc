{
  "version": "1.0",
  "package": {
    "name": "Blur",
    "version": "1.0.0",
    "description": "Blurs an Image",
    "author": "Muhammad Taha Suhail",
    "image": "%3Csvg%20height=%22512%22%20viewBox=%220%200%20256%20256%22%20width=%22512%22%20xmlns=%22http://www.w3.org/2000/svg%22%3E%3Cpath%20d=%22M202.581%2053.857l-33.504-33.504H53.419v204.321h149.162z%22%20fill=%22#cecece%22/%3E%3Cpath%20d=%22M169.077%2020.353h-6.5l33.504%2033.504v170.817h6.5V53.857z%22%20fill=%22#e2e2e2%22/%3E%3Cpath%20d=%22M53.419%2020.353h6.5v204.321h-6.5z%22%20fill=%22#afafaf%22/%3E%3Cg%20fill=%22#f8af23%22%3E%3Cpath%20d=%22M73.16%20122.514h16.126v16.126H73.16zM103.672%20122.514h79.168v16.126h-79.168z%22/%3E%3C/g%3E%3Ccircle%20cx=%22128%22%20cy=%2259.592%22%20fill=%22#9e9e9e%22%20r=%2212.722%22/%3E%3Cpath%20d=%22M144.888%20100.585h-33.775V84.641c0-6.808%205.519-12.327%2012.327-12.327h9.122c6.808%200%2012.327%205.519%2012.327%2012.327v15.944z%22%20fill=%22#63bce7%22/%3E%3Cg%20fill=%22#3f3679%22%3E%3Cpath%20d=%22M27.323%20234.147H9.32a1.5%201.5%200%201%200%200%203h18.003a1.5%201.5%200%201%200%200-3zM246.68%20234.147h-18.003a1.5%201.5%200%201%200%200%203h18.003a1.5%201.5%200%201%200%200-3zM218.479%20234.147H37.521a1.5%201.5%200%201%200%200%203H218.48a1.5%201.5%200%201%200-.001-3zM9.32%20226.174H246.68a1.5%201.5%200%201%200%200-3h-42.599V53.856c0-.397-.158-.779-.439-1.061l-33.504-33.504a1.5%201.5%200%200%200-1.061-.439H53.419a1.5%201.5%200%200%200-1.5%201.5v202.821H9.32a1.5%201.5%200%201%200%200%203.001zm161.257-202.2l28.383%2028.383h-28.383zM54.919%2021.853h112.658v32.004a1.5%201.5%200%200%200%201.5%201.5h32.004v167.817H54.919z%22/%3E%3Cpath%20d=%22M89.286%20121.014H73.16a1.5%201.5%200%200%200-1.5%201.5v16.125a1.5%201.5%200%200%200%201.5%201.5h16.125a1.5%201.5%200%200%200%201.5-1.5v-16.125a1.5%201.5%200%200%200-1.499-1.5zm-1.5%2016.125H74.66v-13.125h13.125v13.125zM182.84%20121.014h-79.167a1.5%201.5%200%200%200-1.5%201.5v16.125a1.5%201.5%200%200%200%201.5%201.5h79.167a1.5%201.5%200%200%200%201.5-1.5v-16.125a1.5%201.5%200%200%200-1.5-1.5zm-1.5%2016.125h-76.167v-13.125h76.167zM111.112%20102.085h33.775a1.5%201.5%200%200%200%201.5-1.5V84.641c0-6.407-4.387-11.795-10.311-13.356%203.708-2.569%206.145-6.849%206.145-11.692%200-7.842-6.38-14.222-14.222-14.222s-14.222%206.38-14.222%2014.222c0%204.843%202.437%209.123%206.145%2011.692-5.924%201.561-10.311%206.948-10.311%2013.356v15.944c.001.828.673%201.5%201.501%201.5zm5.666-42.492c0-6.188%205.034-11.222%2011.222-11.222%206.187%200%2011.222%205.034%2011.222%2011.222S134.187%2070.814%20128%2070.814c-6.188%200-11.222-5.034-11.222-11.221zm-4.166%2025.048c0-5.97%204.857-10.826%2010.827-10.826h9.122c5.97%200%2010.827%204.856%2010.827%2010.826v14.444h-30.775V84.641z%22/%3E%3C/g%3E%3Cg%3E%3Cg%20fill=%22#afafaf%22%3E%3Cpath%20d=%22M59.919%20132.354h22.703v22.703H59.919zM105.269%20132.354h22.703v22.703h-22.703zM150.675%20132.354h22.703v22.703h-22.703z%22/%3E%3C/g%3E%3Cpath%20d=%22M82.622%20132.354h22.703v22.703H82.622zM127.972%20132.354h22.703v22.703h-22.703zM173.378%20132.354h22.703v22.703h-22.703z%22%20fill=%22#cecece%22/%3E%3C/g%3E%3Cg%3E%3Cg%20fill=%22#cecece%22%3E%3Cpath%20d=%22M59.919%20155.057h22.703v22.703H59.919zM105.269%20155.057h22.703v22.703h-22.703zM150.675%20155.057h22.703v22.703h-22.703z%22/%3E%3C/g%3E%3Cpath%20d=%22M82.622%20155.057h22.703v22.703H82.622zM127.972%20155.057h22.703v22.703h-22.703zM173.378%20155.057h22.703v22.703h-22.703z%22%20fill=%22#afafaf%22/%3E%3C/g%3E%3Cg%3E%3Cg%20fill=%22#afafaf%22%3E%3Cpath%20d=%22M59.919%20177.76h22.703v22.703H59.919zM105.269%20177.76h22.703v22.703h-22.703zM150.675%20177.76h22.703v22.703h-22.703z%22/%3E%3C/g%3E%3Cpath%20d=%22M82.622%20177.76h22.703v22.703H82.622zM127.972%20177.76h22.703v22.703h-22.703zM173.378%20177.76h22.703v22.703h-22.703z%22%20fill=%22#cecece%22/%3E%3C/g%3E%3Cg%3E%3Cg%20fill=%22#cecece%22%3E%3Cpath%20d=%22M59.919%20200.463h22.703v22.703H59.919zM105.269%20200.463h22.703v22.703h-22.703zM150.675%20200.463h22.703v22.703h-22.703z%22/%3E%3C/g%3E%3Cpath%20d=%22M82.622%20200.463h22.703v22.703H82.622zM127.972%20200.463h22.703v22.703h-22.703zM173.378%20200.463h22.703v22.703h-22.703z%22%20fill=%22#afafaf%22/%3E%3C/g%3E%3C/svg%3E"
  },
  "design": {
    "board": "Python3-Noetic",
    "graph": {
      "blocks": [

        {
          "id": "Inp-0",
          "type": "basic.input",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },

        {
          "id": "Inp-1",
          "type": "basic.input",
          "data": {
            "name": "E",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 64,
            "y": 144
          }
        },


        {
          "id": "Out-0",
          "type": "basic.output",
          "data": {
            "name": "",
            "pins": [
              {
                "index": "0",
                "name": "",
                "value": "0"
              }
            ],
            "virtual": true
          },
          "position": {
            "x": 752,
            "y": 144
          }
        },
        
       {
          "id": "300",
          "type": "basic.code",
          "data": {
            "code": "import cv2 as cv\nimport numpy as np\nfrom time import sleep\nfrom utils.wires.wire_img import share_image, read_image\nfrom utils.wires.wire_str import read_string\nfrom utils.tools.freq_monitor import monitor_frequency\n\ndef loop(block_name, input_wires, output_wires, parameters, flags):\n\n    input_0 = read_image(input_wires[0])\n    output_0 = share_image(output_wires[0])\n\n    # Blur Type\n    blur_type = parameters[1]\n    \n    # Kernel Size\n    kernel = tuple([int(x.strip()) for x in parameters[2].split(',')])\n\n    enabled = False\n    try:\n        enable_wire = read_string(input_wires[1])\n    except IndexError:\n        enabled = True\n    \n    required_frequency, update = float(parameters[0]), 1\n    control_data = np.array([0.0,0.03])\n    \n    if flags[0] == 1:\n        monitor_frequency(block_name, control_data, required_frequency, update)\n        \n    try:\n    \n        while True:\n        \n            if enabled or (update := bool(enable_wire.get()[0])):\n\n                frame = input_0.get()\n                \n                if frame is not None:\n\n                    if blur_type == 'Gaussian':\n                        blurred_img = cv.GaussianBlur(frame, kernel, 0)\n                        \n                    elif blur_type == 'Averaging':\n                        blurred_img = cv.medianBlur(frame, kernel[0])\n                        \n                    elif blur_type == 'Median':\n                        blurred_img = cv.blur(frame, kernel)\n                        \n                    output_0.add(blurred_img)\n                    control_data[0] += 1\n\n            sleep(control_data[1])\n            \n    except KeyboardInterrupt: \n    \n        input_0.release()\n        enable_wire.release()\n        output_0.release()\n",
            "params": [],
            "ports": {
              "in": [
                {
                  "name": "Inp-0"
                }
              ],
              "out": [
                {
                  "name": "Out-0"
                }
              ]
            }
          },
          "position": {
            "x": 50,
            "y": 100
          },
          "size": {
            "width": 800,
            "height": 600
          }
        },
        
        
        {
          "id": "400",
          "type": "basic.constant",
          "data": {
            "name": "Frequency", 
            "value": "30.0",
            "local": true
          },
          "position": {
            "x": 300,
            "y": 10
          }
        },  
        
        {
          "id": "401",
          "type": "basic.constant",
          "data": {
            "name": "Blur Type", 
            "value": "Gaussian",
            "local": true
          },
          "position": {
            "x": 400,
            "y": 10
          }
        },
        {
          "id": "402",
          "type": "basic.constant",
          "data": {
            "name": "Kernel",
            "value": "5,5",
            "local": true
          },
          "position": {
            "x": 500,
            "y": 10
          }
        }        
        
      ],

      "wires": [
        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        },

        {
          "source": {
            "block": "",
            "port": ""
          },
          "target": {
            "block": "",
            "port": ""
          }
        }
      ]
    }
  },
  "dependencies": {}
}
